@page
@model HelloWorldWeb.Pages.LeaderboardModel
@{
    ViewData["Title"] = "טבלת מובילים";
}

<link rel="stylesheet" href="/css/site.css" />

<!-- רקע HTML בלבד (ללא GIF) -->
<iframe src="/logo/fsociety_matrix_blue.html" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: -2; border: none; pointer-events: none; opacity: 0.1;"></iframe>

<!-- לוגו -->
<div class="logo-header">
    <img src="/logo/logo.png" alt="WINTERNET QUIZ" style="max-width: 400px; height: auto;" />
</div>

<!-- כפתור חזרה לחידון – שמאל למעלה -->
<a href="/Index" class="next-question-btn" style="position: fixed; top: 20px; left: 20px; text-decoration: none;">⬅ חזרה לחידון</a>

<!-- טבלת מובילים -->
<div class="quiz-container" style="text-align:center;">
    <h2 style="margin-bottom: 5px;">🏆 טבלת המובילים</h2>
    <div id="last-update" style="font-size: 12px; color: #888; margin-bottom: 20px;">(מתעדכן...)</div>

    <table id="leaderboard-table" style="width: 100%; border-collapse: collapse; margin-top: 10px; color: white; direction: ltr; text-align: left; margin-left: 0; margin-right: auto;">
        <thead>
            <tr style="background-color: #333;">
                <th style="padding: 12px; text-align: left; direction: ltr;">#</th>
                <th style="padding: 12px; text-align: left; direction: ltr;">שם משתמש</th>
                <th style="padding: 12px; text-align: left; direction: ltr;">תשובות נכונות</th>
            </tr>
        </thead>
        <tbody>
        @for (int i = 0; i < Model.SortedUsers.Count; i++)
        {
            var user = Model.SortedUsers[i];
            var isOnline = user.LastSeen != null && user.LastSeen > DateTime.UtcNow.AddMinutes(-5);
            <tr style="background-color:@(i % 2 == 0 ? "#222" : "#111");">
                <td style="padding: 10px; text-align: left; direction: ltr;">@(@i + 1)</td>
                <td style="padding: 10px; text-align: left; direction: ltr;">
                    @if (isOnline)
                    {
                        <strong style="color: var(--rojo);">@user.Username</strong>
                    }
                    else
                    {
                        @user.Username
                    }
                </td>
                <td style="padding: 10px; text-align: left; direction: ltr;">@user.CorrectAnswers</td>
            </tr>
        }
        </tbody>
    </table>
</div>

<script>
let updateInterval;
let clockInterval;

async function fetchLeaderboardData() {
    try {
        const response = await fetch('/api/leaderboard-data?_=' + new Date().getTime());
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const data = await response.json();
        
        if (data && data.users && Array.isArray(data.users)) {
            updateLeaderboardTable(data.users, data.currentUsername);
            window.__lastUpdateAt = Date.now();
        } else {
            console.warn('Invalid data received from server');
        }
        
    } catch (error) {
        console.warn('Failed to fetch leaderboard data:', error);
        document.getElementById('last-update').textContent = '(שגיאה בעדכון - מחכה...)';
    }
}

function updateLeaderboardTable(data, currentUsername) {
    const table = document.getElementById('leaderboard-table');
    if (!table) return;
    
    const tbody = table.querySelector('tbody');
    tbody.innerHTML = '';
    
    data.forEach((user, index) => {
        const row = tbody.insertRow();
        row.style.backgroundColor = index % 2 === 0 ? '#222' : '#111';
        
        const rankCell = row.insertCell();
        rankCell.style.padding = '10px';
        rankCell.style.textAlign = 'left';
        rankCell.style.direction = 'ltr';
        rankCell.textContent = user.rank;
        
        const usernameCell = row.insertCell();
        usernameCell.style.padding = '10px';
        usernameCell.style.textAlign = 'left';
        usernameCell.style.direction = 'ltr';
        
        if (user.isOnline) {
            const strongElement = document.createElement('strong');
            strongElement.style.color = 'var(--rojo)';
            strongElement.textContent = user.username;
            usernameCell.appendChild(strongElement);
        } else {
            usernameCell.textContent = user.username;
        }
        
        const correctCell = row.insertCell();
        correctCell.style.padding = '10px';
        correctCell.style.textAlign = 'left';
        correctCell.style.direction = 'ltr';
        correctCell.textContent = user.correctAnswers;
    });
}

function startAutoUpdate() {
    updateInterval = setInterval(fetchLeaderboardData, 5000);
    if (!clockInterval) {
        clockInterval = setInterval(() => {
            const el = document.getElementById('last-update');
            if (!el) return;
            const t = window.__lastUpdateAt || Date.now();
            const now = new Date();
            el.textContent = `(עודכן ב-${now.toLocaleTimeString('he-IL')})`;
        }, 200);
    }
}

function stopAutoUpdate() {
    if (updateInterval) {
        clearInterval(updateInterval);
        updateInterval = null;
    }
    if (clockInterval) {
        clearInterval(clockInterval);
        clockInterval = null;
    }
}

window.addEventListener('load', () => {
    fetchLeaderboardData();
    startAutoUpdate();
});

document.addEventListener('visibilitychange', () => {
    if (document.hidden) {
        stopAutoUpdate();
    } else {
        startAutoUpdate();
    }
});
</script>